name: Build and Release Masque-Plus

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          # Windows
          - os: windows
            arch: x64
          - os: windows
            arch: ia32
          - os: windows
            arch: arm64

          # Linux
          - os: linux
            arch: x64
          - os: linux
            arch: arm64

          # macOS
          - os: macos
            arch: x64
          - os: macos
            arch: arm64

          # Android
          - os: android
            arch: arm64

    runs-on: ${{ matrix.os == 'windows' && 'windows-latest' || matrix.os == 'macos' && 'macos-latest' || 'ubuntu-latest' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        run: |
          OUTPUT_NAME=masque-plus
          DIR=dist/${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p $DIR

          # Set GOOS and GOARCH
          if [[ "${{ matrix.os }}" == "windows" ]]; then
            EXT=".exe"
            GOOS=windows
            case "${{ matrix.arch }}" in
              x64) GOARCH=amd64 ;;
              ia32) GOARCH=386 ;;
              arm64) GOARCH=arm64 ;;
            esac
          elif [[ "${{ matrix.os }}" == "macos" ]]; then
            EXT=""
            GOOS=darwin
            case "${{ matrix.arch }}" in
              x64) GOARCH=amd64 ;;
              arm64) GOARCH=arm64 ;;
            esac
          elif [[ "${{ matrix.os }}" == "linux" ]]; then
            EXT=""
            GOOS=linux
            case "${{ matrix.arch }}" in
              x64) GOARCH=amd64 ;;
              arm64) GOARCH=arm64 ;;
            esac
          elif [[ "${{ matrix.os }}" == "android" ]]; then
            EXT=".zip"
            GOOS=android
            GOARCH=arm64
          fi

          echo "Building for GOOS=$GOOS GOARCH=$GOARCH"

          go build -o $DIR/$OUTPUT_NAME$EXT main.go

          # Create zip only if not already zip
          if [[ "$EXT" != ".zip" ]]; then
            zip -j $DIR/$OUTPUT_NAME-${{ matrix.os }}-${{ matrix.arch }}.zip $DIR/$OUTPUT_NAME$EXT
          else
            cp $DIR/$OUTPUT_NAME$EXT $DIR/$OUTPUT_NAME-${{ matrix.os }}-${{ matrix.arch }}.zip
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: masque-plus-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/${{ matrix.os }}-${{ matrix.arch }}/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*-*-*.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
