name: Build and Release Masque-Plus

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, macos, linux, android]
        arch: [x64, arm64, arm7, ia32, amd64]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        run: |
          OUTPUT_NAME=masque-plus
          DIR=dist/${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p $DIR

          if [[ "${{ matrix.os }}" == "windows" ]]; then
            EXT=".exe"
            GOOS=windows
            if [[ "${{ matrix.arch }}" == "x64" ]]; then GOARCH=amd64; fi
            if [[ "${{ matrix.arch }}" == "ia32" ]]; then GOARCH=386; fi
            if [[ "${{ matrix.arch }}" == "arm64" ]]; then GOARCH=arm64; fi
          elif [[ "${{ matrix.os }}" == "macos" ]]; then
            EXT=""
            GOOS=darwin
            if [[ "${{ matrix.arch }}" == "x64" ]]; then GOARCH=amd64; fi
            if [[ "${{ matrix.arch }}" == "arm64" ]]; then GOARCH=arm64; fi
          elif [[ "${{ matrix.os }}" == "linux" ]]; then
            EXT=""
            GOOS=linux
            if [[ "${{ matrix.arch }}" == "amd64" ]]; then GOARCH=amd64; fi
            if [[ "${{ matrix.arch }}" == "arm64" ]]; then GOARCH=arm64; fi
            if [[ "${{ matrix.arch }}" == "arm7" ]]; then GOARCH=arm; fi
          elif [[ "${{ matrix.os }}" == "android" ]]; then
            EXT=".zip"
            GOOS=android
            if [[ "${{ matrix.arch }}" == "arm64" ]]; then GOARCH=arm64; fi
          fi

          # Build binary
          go build -o $DIR/$OUTPUT_NAME$EXT main.go

          # Zip با نام OS-ARCH
          zip -j $DIR/$OUTPUT_NAME-${{ matrix.os }}-${{ matrix.arch }}.zip $DIR/$OUTPUT_NAME$EXT

          # حذف فایل اصلی exe/bin تا فایل اضافی نماند
          rm $DIR/$OUTPUT_NAME$EXT

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: masque-plus-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/${{ matrix.os }}-${{ matrix.arch }}/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          # فقط zipهای OS-ARCH آپلود میشن
          files: dist/**/*-*-*.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
