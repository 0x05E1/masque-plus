name: Build masque-plus

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
            arch: amd64
          - os: windows
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: linux
            arch: armv7
          - os: linux
            arch: armv6
          - os: linux
            arch: armv5
          - os: linux
            arch: mips
          - os: linux
            arch: mipsle
          - os: linux
            arch: mips64
          - os: linux
            arch: mips64le
          - os: android
            arch: arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Setup tools
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip
          YQ_VERSION=v4.44.3
          curl -sSL -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64
          chmod +x /usr/local/bin/yq
          if ! command -v gh >/dev/null 2>&1; then
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
            sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y gh
          fi
          chmod +x scripts/fetch_usque.sh

      - name: Fetch usque
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash scripts/fetch_usque.sh "${{ matrix.os }}" "${{ matrix.arch }}"

      - name: Build project
        if: ${{ matrix.os != 'android' }}
        env:
          CGO_ENABLED: 0
        run: |
          mkdir -p build/masque-plus/${{ matrix.os }}_${{ matrix.arch }}

          set_go_envs() {
            case "${{ matrix.arch }}" in
              amd64)   echo "GOOS=${{ matrix.os }} GOARCH=amd64" ;;
              arm64)   echo "GOOS=${{ matrix.os }} GOARCH=arm64" ;;
              armv5)   echo "GOOS=${{ matrix.os }} GOARCH=arm GOARM=5" ;;
              armv6)   echo "GOOS=${{ matrix.os }} GOARCH=arm GOARM=6" ;;
              armv7)   echo "GOOS=${{ matrix.os }} GOARCH=arm GOARM=7" ;;
              mips)    echo "GOOS=${{ matrix.os }} GOARCH=mips" ;;
              mipsle)  echo "GOOS=${{ matrix.os }} GOARCH=mipsle" ;;
              mips64)  echo "GOOS=${{ matrix.os }} GOARCH=mips64" ;;
              mips64le)echo "GOOS=${{ matrix.os }} GOARCH=mips64le" ;;
              *) echo "unsupported arch: ${{ matrix.arch }}"; exit 1 ;;
            esac
          }

          eval "$(set_go_envs)"

          if [ "${{ matrix.os }}" = "windows" ]; then
            go build -o build/masque-plus/${{ matrix.os }}_${{ matrix.arch }}/masque-plus.exe .
          else
            go build -o build/masque-plus/${{ matrix.os }}_${{ matrix.arch }}/masque-plus .
          fi

      - name: Prepare package directory (android)
        if: ${{ matrix.os == 'android' }}
        run: |
          mkdir -p build/masque-plus/${{ matrix.os }}_${{ matrix.arch }}

      - name: Bundle usque binary into package
        run: |
          cp build/vendor/usque/${{ matrix.os }}_${{ matrix.arch }}/* build/masque-plus/${{ matrix.os }}_${{ matrix.arch }}/

      - name: Create flat zip per target
        run: |
          mkdir -p build/out
          cd build/masque-plus/${{ matrix.os }}_${{ matrix.arch }}
          zip -r ../../out/masque-plus-${{ matrix.os }}_${{ matrix.arch }}.zip .

      - name: Upload as artifact
        uses: actions/upload-artifact@v4
        with:
          name: masque-plus-${{ matrix.os }}_${{ matrix.arch }}
          path: build/out/masque-plus-${{ matrix.os }}_${{ matrix.arch }}.zip

      - name: Upload to GitHub Release on tag
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          if ! gh release view "${TAG}" >/dev/null 2>&1; then
            gh release create "${TAG}" --title "${TAG}" --notes "Automated release for ${TAG}"
          fi
          gh release upload "${TAG}" "build/out/masque-plus-${{ matrix.os }}_${{ matrix.arch }}.zip" --clobber
