name: Build and Release Masque-Plus

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  # ------------------------------
  # Windows builds (PowerShell)
  # ------------------------------
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, ia32, arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build Windows executable
        shell: pwsh
        run: |
          $env:GOOS="windows"
          switch ($env:MATRIX_ARCH) {
            "x64" { $env:GOARCH="amd64" }
            "ia32" { $env:GOARCH="386" }
            "arm64" { $env:GOARCH="arm64" }
          }

          $Dir = "dist/windows-$($env:MATRIX_ARCH)"
          New-Item -ItemType Directory -Force -Path $Dir

          $OutputName = "masque-plus.exe"
          go build -o "$Dir\$OutputName" main.go

          $ZipName = "masque-plus-windows-$($env:MATRIX_ARCH).zip"
          Compress-Archive -Path "$Dir\$OutputName" -DestinationPath "$Dir\$ZipName"

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: masque-plus-windows-${{ matrix.arch }}
          path: dist/windows-${{ matrix.arch }}/*.zip

  # ------------------------------
  # Linux/macOS/Android builds (Bash)
  # ------------------------------
  build-unix:
    runs-on: ${{ matrix.os == 'macos' && 'macos-latest' || 'ubuntu-latest' }}
    strategy:
      matrix:
        os: [linux, macos, android]
        arch: [x64, arm64]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Build
        shell: bash
        run: |
          OUTPUT_NAME=masque-plus
          DIR=dist/${{ matrix.os }}-${{ matrix.arch }}
          mkdir -p $DIR

          if [[ "${{ matrix.os }}" == "macos" ]]; then
            EXT=""
            GOOS=darwin
            [[ "${{ matrix.arch }}" == "x64" ]] && GOARCH=amd64 || GOARCH=arm64
          elif [[ "${{ matrix.os }}" == "linux" ]]; then
            EXT=""
            GOOS=linux
            [[ "${{ matrix.arch }}" == "x64" ]] && GOARCH=amd64 || GOARCH=arm64
          elif [[ "${{ matrix.os }}" == "android" ]]; then
            EXT=".zip"
            GOOS=android
            GOARCH=arm64
          fi

          echo "Building for GOOS=$GOOS GOARCH=$GOARCH"

          go build -o $DIR/$OUTPUT_NAME$EXT main.go

          if [[ "$EXT" != ".zip" ]]; then
            zip -j $DIR/$OUTPUT_NAME-${{ matrix.os }}-${{ matrix.arch }}.zip $DIR/$OUTPUT_NAME$EXT
          else
            cp $DIR/$OUTPUT_NAME$EXT $DIR/$OUTPUT_NAME-${{ matrix.os }}-${{ matrix.arch }}.zip
          fi

      - name: Upload Unix artifact
        uses: actions/upload-artifact@v4
        with:
          name: masque-plus-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/${{ matrix.os }}-${{ matrix.arch }}/*.zip

  # ------------------------------
  # Release job
  # ------------------------------
  release:
    needs: [build-windows, build-unix]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/*-*-*.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
